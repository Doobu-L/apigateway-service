server:
  port: 8000
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

spring:
  application:
    name: apigateway-service
  cloud:
    gateway:
      #http://localhost:8080/first-service/welcome 으로 요청이 들어오면
      #predicates 를 판별해서 해당 uri로 포워딩.
      routes:
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/login
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/users
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*),/$\{segment}

#            - AddRequestHeader=first-request, first-requests-header2
#            - AddResponseHeader=first-response, first-response-header2
          #- CustomFilter
#        - id: second-service
#          uri: lb://MY-SECOND-SERVICE
#          predicates:
#            - Path=/second-service/**
#          filters:
##            - AddRequestHeader=second-request, second-requests-header2
##            - AddResponseHeader=second-response, second-response-header2
#            - name: CustomFilter
#            - name: LoggingFilter #두개 이상의 필터를 등록 할 때 name: 으로 구분해줘야함
#              args:
#                baseMessage: String Coloud Gateway Logging Filter
#                preLogger: true
#                postLogger: true
#      default-filters:
#        - name: GlobalFilter
#          args:
#            baseMessage: String Coloud Gateway Global Filter
#            preLogger: true
#            postLogger: true